spring:
  application:
    name: ${SERVICE_NAME:auth-server}
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        enable:
          idempotence: true

  datasource:
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/auth}
    username: ${DATASOURCE_USERNAME:auth}
    password: ${DATASOURCE_PASSWORD:auth}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}

server:
  port: ${SERVER_PORT:9000}

eureka:
  client:
    enabled: ${USE_EUREKA:false}
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka}
    register-with-eureka: ${EUREKA_CLIENT_REGISTER:false}
    fetch-registry: false
  instance:
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:true}

app:
  locale: ${APP_LOCALE:EN}
  roles: ${APP_ROLES:USER,ADMIN}
  scopes: ${APP_SCOPES:CHANGE_USERS,CHANGE_ROLES,CHANGE_SCOPES,CREATE_ADMIN,CREATE_BY}
  permitted-roles: ${APP_ROLES_PERMITTED:USER}
  admin:
    username: ${APP_ADMIN_USERNAME:admin}
    password: ${APP_ADMIN_PASSWORD:adminpassword}
  users:
    - username: user
      password: user
      role: USER
      scopes: CHANGE_USERS,CREATE_BY
  kafka:
    user-register-topic: ${USER_REGISTER_TOPIC:user-registration}
    enabled: ${USE_KAFKA:false}

jwt:
  expiration: ${JWT_EXPIRATION:1h}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:5d}
  secret: ${JWT_SECRET:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000}

time-parser:
  separator: ${TIME_SEPARATOR:}
